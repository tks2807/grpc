// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/category.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace GrpcClient.Protos {
  public static partial class Category
  {
    static readonly string __ServiceName = "Category";

    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    static readonly grpc::Marshaller<global::GrpcClient.Protos.FindCategory> __Marshaller_FindCategory = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcClient.Protos.FindCategory.Parser));
    static readonly grpc::Marshaller<global::GrpcClient.Protos.CategoryInfo> __Marshaller_CategoryInfo = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcClient.Protos.CategoryInfo.Parser));
    static readonly grpc::Marshaller<global::GrpcClient.Protos.FindProduct> __Marshaller_FindProduct = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcClient.Protos.FindProduct.Parser));
    static readonly grpc::Marshaller<global::GrpcClient.Protos.ProductInfo> __Marshaller_ProductInfo = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcClient.Protos.ProductInfo.Parser));
    static readonly grpc::Marshaller<global::GrpcClient.Protos.Empty> __Marshaller_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcClient.Protos.Empty.Parser));

    static readonly grpc::Method<global::GrpcClient.Protos.FindCategory, global::GrpcClient.Protos.CategoryInfo> __Method_GetCategory = new grpc::Method<global::GrpcClient.Protos.FindCategory, global::GrpcClient.Protos.CategoryInfo>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetCategory",
        __Marshaller_FindCategory,
        __Marshaller_CategoryInfo);

    static readonly grpc::Method<global::GrpcClient.Protos.FindProduct, global::GrpcClient.Protos.ProductInfo> __Method_GetProduct = new grpc::Method<global::GrpcClient.Protos.FindProduct, global::GrpcClient.Protos.ProductInfo>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetProduct",
        __Marshaller_FindProduct,
        __Marshaller_ProductInfo);

    static readonly grpc::Method<global::GrpcClient.Protos.CategoryInfo, global::GrpcClient.Protos.Empty> __Method_InsertCategory = new grpc::Method<global::GrpcClient.Protos.CategoryInfo, global::GrpcClient.Protos.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "InsertCategory",
        __Marshaller_CategoryInfo,
        __Marshaller_Empty);

    static readonly grpc::Method<global::GrpcClient.Protos.ProductInfo, global::GrpcClient.Protos.Empty> __Method_InsertProduct = new grpc::Method<global::GrpcClient.Protos.ProductInfo, global::GrpcClient.Protos.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "InsertProduct",
        __Marshaller_ProductInfo,
        __Marshaller_Empty);

    static readonly grpc::Method<global::GrpcClient.Protos.CategoryInfo, global::GrpcClient.Protos.Empty> __Method_UpdateCategory = new grpc::Method<global::GrpcClient.Protos.CategoryInfo, global::GrpcClient.Protos.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateCategory",
        __Marshaller_CategoryInfo,
        __Marshaller_Empty);

    static readonly grpc::Method<global::GrpcClient.Protos.ProductInfo, global::GrpcClient.Protos.Empty> __Method_UpdateProduct = new grpc::Method<global::GrpcClient.Protos.ProductInfo, global::GrpcClient.Protos.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateProduct",
        __Marshaller_ProductInfo,
        __Marshaller_Empty);

    static readonly grpc::Method<global::GrpcClient.Protos.FindCategory, global::GrpcClient.Protos.Empty> __Method_DeleteCategory = new grpc::Method<global::GrpcClient.Protos.FindCategory, global::GrpcClient.Protos.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteCategory",
        __Marshaller_FindCategory,
        __Marshaller_Empty);

    static readonly grpc::Method<global::GrpcClient.Protos.FindProduct, global::GrpcClient.Protos.Empty> __Method_DeleteProduct = new grpc::Method<global::GrpcClient.Protos.FindProduct, global::GrpcClient.Protos.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteProduct",
        __Marshaller_FindProduct,
        __Marshaller_Empty);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::GrpcClient.Protos.CategoryReflection.Descriptor.Services[0]; }
    }

    /// <summary>Client for Category</summary>
    public partial class CategoryClient : grpc::ClientBase<CategoryClient>
    {
      /// <summary>Creates a new client for Category</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public CategoryClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for Category that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public CategoryClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected CategoryClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected CategoryClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::GrpcClient.Protos.CategoryInfo GetCategory(global::GrpcClient.Protos.FindCategory request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCategory(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GrpcClient.Protos.CategoryInfo GetCategory(global::GrpcClient.Protos.FindCategory request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetCategory, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcClient.Protos.CategoryInfo> GetCategoryAsync(global::GrpcClient.Protos.FindCategory request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCategoryAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcClient.Protos.CategoryInfo> GetCategoryAsync(global::GrpcClient.Protos.FindCategory request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetCategory, null, options, request);
      }
      public virtual global::GrpcClient.Protos.ProductInfo GetProduct(global::GrpcClient.Protos.FindProduct request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetProduct(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GrpcClient.Protos.ProductInfo GetProduct(global::GrpcClient.Protos.FindProduct request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetProduct, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcClient.Protos.ProductInfo> GetProductAsync(global::GrpcClient.Protos.FindProduct request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetProductAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcClient.Protos.ProductInfo> GetProductAsync(global::GrpcClient.Protos.FindProduct request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetProduct, null, options, request);
      }
      public virtual global::GrpcClient.Protos.Empty InsertCategory(global::GrpcClient.Protos.CategoryInfo request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return InsertCategory(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GrpcClient.Protos.Empty InsertCategory(global::GrpcClient.Protos.CategoryInfo request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_InsertCategory, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcClient.Protos.Empty> InsertCategoryAsync(global::GrpcClient.Protos.CategoryInfo request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return InsertCategoryAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcClient.Protos.Empty> InsertCategoryAsync(global::GrpcClient.Protos.CategoryInfo request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_InsertCategory, null, options, request);
      }
      public virtual global::GrpcClient.Protos.Empty InsertProduct(global::GrpcClient.Protos.ProductInfo request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return InsertProduct(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GrpcClient.Protos.Empty InsertProduct(global::GrpcClient.Protos.ProductInfo request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_InsertProduct, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcClient.Protos.Empty> InsertProductAsync(global::GrpcClient.Protos.ProductInfo request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return InsertProductAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcClient.Protos.Empty> InsertProductAsync(global::GrpcClient.Protos.ProductInfo request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_InsertProduct, null, options, request);
      }
      public virtual global::GrpcClient.Protos.Empty UpdateCategory(global::GrpcClient.Protos.CategoryInfo request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateCategory(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GrpcClient.Protos.Empty UpdateCategory(global::GrpcClient.Protos.CategoryInfo request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateCategory, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcClient.Protos.Empty> UpdateCategoryAsync(global::GrpcClient.Protos.CategoryInfo request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateCategoryAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcClient.Protos.Empty> UpdateCategoryAsync(global::GrpcClient.Protos.CategoryInfo request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateCategory, null, options, request);
      }
      public virtual global::GrpcClient.Protos.Empty UpdateProduct(global::GrpcClient.Protos.ProductInfo request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateProduct(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GrpcClient.Protos.Empty UpdateProduct(global::GrpcClient.Protos.ProductInfo request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateProduct, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcClient.Protos.Empty> UpdateProductAsync(global::GrpcClient.Protos.ProductInfo request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateProductAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcClient.Protos.Empty> UpdateProductAsync(global::GrpcClient.Protos.ProductInfo request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateProduct, null, options, request);
      }
      public virtual global::GrpcClient.Protos.Empty DeleteCategory(global::GrpcClient.Protos.FindCategory request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteCategory(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GrpcClient.Protos.Empty DeleteCategory(global::GrpcClient.Protos.FindCategory request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteCategory, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcClient.Protos.Empty> DeleteCategoryAsync(global::GrpcClient.Protos.FindCategory request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteCategoryAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcClient.Protos.Empty> DeleteCategoryAsync(global::GrpcClient.Protos.FindCategory request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteCategory, null, options, request);
      }
      public virtual global::GrpcClient.Protos.Empty DeleteProduct(global::GrpcClient.Protos.FindProduct request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteProduct(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GrpcClient.Protos.Empty DeleteProduct(global::GrpcClient.Protos.FindProduct request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteProduct, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcClient.Protos.Empty> DeleteProductAsync(global::GrpcClient.Protos.FindProduct request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteProductAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcClient.Protos.Empty> DeleteProductAsync(global::GrpcClient.Protos.FindProduct request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteProduct, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override CategoryClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new CategoryClient(configuration);
      }
    }

  }
}
#endregion

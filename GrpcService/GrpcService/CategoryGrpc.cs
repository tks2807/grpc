// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/category.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace GrpcService.Protos {
  public static partial class Category
  {
    static readonly string __ServiceName = "category.Category";

    static readonly grpc::Marshaller<global::GrpcService.Protos.FindCategory> __Marshaller_category_FindCategory = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcService.Protos.FindCategory.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcService.Protos.CategoryInfo> __Marshaller_category_CategoryInfo = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcService.Protos.CategoryInfo.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcService.Protos.FindProduct> __Marshaller_category_FindProduct = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcService.Protos.FindProduct.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcService.Protos.ProductInfo> __Marshaller_category_ProductInfo = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcService.Protos.ProductInfo.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcService.Protos.Empty> __Marshaller_category_Empty = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcService.Protos.Empty.Parser.ParseFrom);

    static readonly grpc::Method<global::GrpcService.Protos.FindCategory, global::GrpcService.Protos.CategoryInfo> __Method_GetCategory = new grpc::Method<global::GrpcService.Protos.FindCategory, global::GrpcService.Protos.CategoryInfo>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetCategory",
        __Marshaller_category_FindCategory,
        __Marshaller_category_CategoryInfo);

    static readonly grpc::Method<global::GrpcService.Protos.FindProduct, global::GrpcService.Protos.ProductInfo> __Method_GetProduct = new grpc::Method<global::GrpcService.Protos.FindProduct, global::GrpcService.Protos.ProductInfo>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetProduct",
        __Marshaller_category_FindProduct,
        __Marshaller_category_ProductInfo);

    static readonly grpc::Method<global::GrpcService.Protos.CategoryInfo, global::GrpcService.Protos.Empty> __Method_InsertCategory = new grpc::Method<global::GrpcService.Protos.CategoryInfo, global::GrpcService.Protos.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "InsertCategory",
        __Marshaller_category_CategoryInfo,
        __Marshaller_category_Empty);

    static readonly grpc::Method<global::GrpcService.Protos.ProductInfo, global::GrpcService.Protos.Empty> __Method_InsertProduct = new grpc::Method<global::GrpcService.Protos.ProductInfo, global::GrpcService.Protos.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "InsertProduct",
        __Marshaller_category_ProductInfo,
        __Marshaller_category_Empty);

    static readonly grpc::Method<global::GrpcService.Protos.CategoryInfo, global::GrpcService.Protos.Empty> __Method_UpdateCategory = new grpc::Method<global::GrpcService.Protos.CategoryInfo, global::GrpcService.Protos.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateCategory",
        __Marshaller_category_CategoryInfo,
        __Marshaller_category_Empty);

    static readonly grpc::Method<global::GrpcService.Protos.ProductInfo, global::GrpcService.Protos.Empty> __Method_UpdateProduct = new grpc::Method<global::GrpcService.Protos.ProductInfo, global::GrpcService.Protos.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateProduct",
        __Marshaller_category_ProductInfo,
        __Marshaller_category_Empty);

    static readonly grpc::Method<global::GrpcService.Protos.FindCategory, global::GrpcService.Protos.Empty> __Method_DeleteCategory = new grpc::Method<global::GrpcService.Protos.FindCategory, global::GrpcService.Protos.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteCategory",
        __Marshaller_category_FindCategory,
        __Marshaller_category_Empty);

    static readonly grpc::Method<global::GrpcService.Protos.FindProduct, global::GrpcService.Protos.Empty> __Method_DeleteProduct = new grpc::Method<global::GrpcService.Protos.FindProduct, global::GrpcService.Protos.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteProduct",
        __Marshaller_category_FindProduct,
        __Marshaller_category_Empty);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::GrpcService.Protos.CategoryReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of Category</summary>
    [grpc::BindServiceMethod(typeof(Category), "BindService")]
    public abstract partial class CategoryBase
    {
      public virtual global::System.Threading.Tasks.Task<global::GrpcService.Protos.CategoryInfo> GetCategory(global::GrpcService.Protos.FindCategory request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::GrpcService.Protos.ProductInfo> GetProduct(global::GrpcService.Protos.FindProduct request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::GrpcService.Protos.Empty> InsertCategory(global::GrpcService.Protos.CategoryInfo request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::GrpcService.Protos.Empty> InsertProduct(global::GrpcService.Protos.ProductInfo request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::GrpcService.Protos.Empty> UpdateCategory(global::GrpcService.Protos.CategoryInfo request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::GrpcService.Protos.Empty> UpdateProduct(global::GrpcService.Protos.ProductInfo request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::GrpcService.Protos.Empty> DeleteCategory(global::GrpcService.Protos.FindCategory request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::GrpcService.Protos.Empty> DeleteProduct(global::GrpcService.Protos.FindProduct request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for Category</summary>
    public partial class CategoryClient : grpc::ClientBase<CategoryClient>
    {
      /// <summary>Creates a new client for Category</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public CategoryClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for Category that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public CategoryClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected CategoryClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected CategoryClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::GrpcService.Protos.CategoryInfo GetCategory(global::GrpcService.Protos.FindCategory request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCategory(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GrpcService.Protos.CategoryInfo GetCategory(global::GrpcService.Protos.FindCategory request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetCategory, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcService.Protos.CategoryInfo> GetCategoryAsync(global::GrpcService.Protos.FindCategory request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCategoryAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcService.Protos.CategoryInfo> GetCategoryAsync(global::GrpcService.Protos.FindCategory request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetCategory, null, options, request);
      }
      public virtual global::GrpcService.Protos.ProductInfo GetProduct(global::GrpcService.Protos.FindProduct request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetProduct(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GrpcService.Protos.ProductInfo GetProduct(global::GrpcService.Protos.FindProduct request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetProduct, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcService.Protos.ProductInfo> GetProductAsync(global::GrpcService.Protos.FindProduct request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetProductAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcService.Protos.ProductInfo> GetProductAsync(global::GrpcService.Protos.FindProduct request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetProduct, null, options, request);
      }
      public virtual global::GrpcService.Protos.Empty InsertCategory(global::GrpcService.Protos.CategoryInfo request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return InsertCategory(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GrpcService.Protos.Empty InsertCategory(global::GrpcService.Protos.CategoryInfo request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_InsertCategory, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcService.Protos.Empty> InsertCategoryAsync(global::GrpcService.Protos.CategoryInfo request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return InsertCategoryAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcService.Protos.Empty> InsertCategoryAsync(global::GrpcService.Protos.CategoryInfo request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_InsertCategory, null, options, request);
      }
      public virtual global::GrpcService.Protos.Empty InsertProduct(global::GrpcService.Protos.ProductInfo request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return InsertProduct(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GrpcService.Protos.Empty InsertProduct(global::GrpcService.Protos.ProductInfo request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_InsertProduct, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcService.Protos.Empty> InsertProductAsync(global::GrpcService.Protos.ProductInfo request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return InsertProductAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcService.Protos.Empty> InsertProductAsync(global::GrpcService.Protos.ProductInfo request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_InsertProduct, null, options, request);
      }
      public virtual global::GrpcService.Protos.Empty UpdateCategory(global::GrpcService.Protos.CategoryInfo request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateCategory(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GrpcService.Protos.Empty UpdateCategory(global::GrpcService.Protos.CategoryInfo request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateCategory, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcService.Protos.Empty> UpdateCategoryAsync(global::GrpcService.Protos.CategoryInfo request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateCategoryAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcService.Protos.Empty> UpdateCategoryAsync(global::GrpcService.Protos.CategoryInfo request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateCategory, null, options, request);
      }
      public virtual global::GrpcService.Protos.Empty UpdateProduct(global::GrpcService.Protos.ProductInfo request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateProduct(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GrpcService.Protos.Empty UpdateProduct(global::GrpcService.Protos.ProductInfo request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateProduct, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcService.Protos.Empty> UpdateProductAsync(global::GrpcService.Protos.ProductInfo request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateProductAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcService.Protos.Empty> UpdateProductAsync(global::GrpcService.Protos.ProductInfo request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateProduct, null, options, request);
      }
      public virtual global::GrpcService.Protos.Empty DeleteCategory(global::GrpcService.Protos.FindCategory request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteCategory(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GrpcService.Protos.Empty DeleteCategory(global::GrpcService.Protos.FindCategory request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteCategory, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcService.Protos.Empty> DeleteCategoryAsync(global::GrpcService.Protos.FindCategory request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteCategoryAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcService.Protos.Empty> DeleteCategoryAsync(global::GrpcService.Protos.FindCategory request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteCategory, null, options, request);
      }
      public virtual global::GrpcService.Protos.Empty DeleteProduct(global::GrpcService.Protos.FindProduct request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteProduct(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GrpcService.Protos.Empty DeleteProduct(global::GrpcService.Protos.FindProduct request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteProduct, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcService.Protos.Empty> DeleteProductAsync(global::GrpcService.Protos.FindProduct request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteProductAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcService.Protos.Empty> DeleteProductAsync(global::GrpcService.Protos.FindProduct request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteProduct, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override CategoryClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new CategoryClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(CategoryBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetCategory, serviceImpl.GetCategory)
          .AddMethod(__Method_GetProduct, serviceImpl.GetProduct)
          .AddMethod(__Method_InsertCategory, serviceImpl.InsertCategory)
          .AddMethod(__Method_InsertProduct, serviceImpl.InsertProduct)
          .AddMethod(__Method_UpdateCategory, serviceImpl.UpdateCategory)
          .AddMethod(__Method_UpdateProduct, serviceImpl.UpdateProduct)
          .AddMethod(__Method_DeleteCategory, serviceImpl.DeleteCategory)
          .AddMethod(__Method_DeleteProduct, serviceImpl.DeleteProduct).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, CategoryBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetCategory, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcService.Protos.FindCategory, global::GrpcService.Protos.CategoryInfo>(serviceImpl.GetCategory));
      serviceBinder.AddMethod(__Method_GetProduct, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcService.Protos.FindProduct, global::GrpcService.Protos.ProductInfo>(serviceImpl.GetProduct));
      serviceBinder.AddMethod(__Method_InsertCategory, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcService.Protos.CategoryInfo, global::GrpcService.Protos.Empty>(serviceImpl.InsertCategory));
      serviceBinder.AddMethod(__Method_InsertProduct, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcService.Protos.ProductInfo, global::GrpcService.Protos.Empty>(serviceImpl.InsertProduct));
      serviceBinder.AddMethod(__Method_UpdateCategory, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcService.Protos.CategoryInfo, global::GrpcService.Protos.Empty>(serviceImpl.UpdateCategory));
      serviceBinder.AddMethod(__Method_UpdateProduct, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcService.Protos.ProductInfo, global::GrpcService.Protos.Empty>(serviceImpl.UpdateProduct));
      serviceBinder.AddMethod(__Method_DeleteCategory, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcService.Protos.FindCategory, global::GrpcService.Protos.Empty>(serviceImpl.DeleteCategory));
      serviceBinder.AddMethod(__Method_DeleteProduct, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcService.Protos.FindProduct, global::GrpcService.Protos.Empty>(serviceImpl.DeleteProduct));
    }

  }
}
#endregion
